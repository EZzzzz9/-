import streamlit as st
import pandas as pd
from io import StringIO

st.set_page_config(page_title="–¢–µ—Å—Ç —Å –ø–æ–≤—Ç–æ—Ä–æ–º –æ—à–∏–±–æ–∫", layout="centered")
st.title("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")

# –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞
if st.button("üîÅ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"):
    st.session_state.clear()
    st.rerun()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
defaults = {
    "step": 0,
    "score": 0,
    "answers": [],
    "finished": False,
    "show_result": False,
    "selected_option": None,
    "last_result": None,
    "mode": "full_test",
    "df_full": None,
    "current_df": None,
}
for key, val in defaults.items():
    if key not in st.session_state:
        st.session_state[key] = val

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
st.sidebar.header("üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤")
xlsx_file = st.sidebar.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel (.xlsx)", type="xlsx")
csv_file = st.sidebar.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Å –æ—à–∏–±–∫–∞–º–∏ (–æ–ø—Ü.)", type="csv")

# –ó–∞–≥—Ä—É–∂–∞–µ–º Excel
if xlsx_file:
    try:
        df_full = pd.read_excel(xlsx_file)
        df_full = df_full.dropna(subset=["–í–æ–ø—Ä–æ—Å", "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç"])
        st.session_state.df_full = df_full
        if st.session_state.current_df is None:
            st.session_state.current_df = df_full.copy()
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel: {e}")
        st.stop()

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV —Å –æ—à–∏–±–∫–∞–º–∏
if csv_file and st.session_state.df_full is not None:
    try:
        csv_df = pd.read_csv(csv_file)
        csv_df = csv_df[csv_df["–†–µ–∑—É–ª—å—Ç–∞—Ç"] == "‚ùå –ù–µ–≤–µ—Ä–Ω–æ"]

        retry_questions = csv_df["–í–æ–ø—Ä–æ—Å"].tolist()
        matched = st.session_state.df_full[st.session_state.df_full["–í–æ–ø—Ä–æ—Å"].isin(retry_questions)].copy()

        if not matched.empty:
            st.session_state.current_df = matched.reset_index(drop=True)
            st.session_state.step = 0
            st.session_state.answers = []
            st.session_state.score = 0
            st.session_state.show_result = False
            st.session_state.finished = False
            st.session_state.mode = "csv_retry"
            st.success("üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω CSV. –¢–µ—Å—Ç –±—É–¥–µ—Ç –ø–æ –æ—à–∏–±–æ—á–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º.")
            st.rerun()
        else:
            st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ CSV –≤ Excel.")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ CSV: {e}")
        st.stop()

df = st.session_state.current_df
if df is not None:
    total = len(df)
    current = st.session_state.step

    # –ü—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä
    correct = sum(1 for a in st.session_state.answers if a["–†–µ–∑—É–ª—å—Ç–∞—Ç"] == "‚úÖ –í–µ—Ä–Ω–æ")
    wrong = sum(1 for a in st.session_state.answers if a["–†–µ–∑—É–ª—å—Ç–∞—Ç"] == "‚ùå –ù–µ–≤–µ—Ä–Ω–æ")
    st.markdown(f"**–ü—Ä–æ–≥—Ä–µ—Å—Å:** –í–æ–ø—Ä–æ—Å {current+1} –∏–∑ {total}")
    st.markdown(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct} | ‚ùå –ù–µ–≤–µ—Ä–Ω–æ: {wrong} | ‚¨õ –û—Å—Ç–∞–ª–æ—Å—å: {total - (correct + wrong)}")

    if current < total:
        row = df.iloc[current]
        st.markdown(f"### {row['–í–æ–ø—Ä–æ—Å']}")
        options = ['A', 'B', 'C', 'D', 'E', 'F']
        valid = [(opt, str(row[opt])) for opt in options if pd.notna(row.get(opt))]
        correct_answer = str(row["–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç"]).strip().upper()

        # –ö–ª—é—á –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ –∏ —Ä–µ–∂–∏–º–∞
        radio_key = f"radio_{st.session_state.mode}_{current}"
        selected = st.radio(
            "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:",
            [f"{opt}) {text}" for opt, text in valid],
            key=radio_key,
            index=None
        )

        if not st.session_state.show_result:
            if st.button("–û—Ç–≤–µ—Ç–∏—Ç—å"):
                if selected:
                    selected_letter = selected[0]
                    is_correct = selected_letter == correct_answer

                    st.session_state.answers.append({
                        "–†–µ–∂–∏–º": "–ü–æ–≤—Ç–æ—Ä –ø–æ CSV" if st.session_state.mode == "csv_retry" else "–û—Å–Ω–æ–≤–Ω–æ–π",
                        "–ò–Ω–¥–µ–∫—Å": row.name,
                        "–í–æ–ø—Ä–æ—Å": row["–í–æ–ø—Ä–æ—Å"],
                        "–í—ã –≤—ã–±—Ä–∞–ª–∏": selected_letter,
                        "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç": correct_answer,
                        "–†–µ–∑—É–ª—å—Ç–∞—Ç": "‚úÖ –í–µ—Ä–Ω–æ" if is_correct else "‚ùå –ù–µ–≤–µ—Ä–Ω–æ"
                    })
                    if is_correct:
                        st.session_state.score += 1
                    st.session_state.last_result = is_correct
                    st.session_state.show_result = True
                    st.session_state.selected_option = selected_letter
                    st.rerun()
        else:
            if st.button("–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"):
                st.session_state.step += 1
                st.session_state.show_result = False
                st.session_state.selected_option = None
                st.session_state.last_result = None
                st.rerun()

            if st.session_state.last_result:
                st.success("‚úÖ –í–µ—Ä–Ω–æ!")
            else:
                st.error(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")

    elif not st.session_state.finished:
        st.session_state.finished = True
        st.success(f"–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {st.session_state.score} –∏–∑ {total}")

        wrong_df = pd.DataFrame(st.session_state.answers)
        wrong_df = wrong_df[wrong_df["–†–µ–∑—É–ª—å—Ç–∞—Ç"] != "‚úÖ –í–µ—Ä–Ω–æ"]
        if not wrong_df.empty:
            st.warning("–•–æ—Ç–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏?")
            if st.button("üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ—à–∏–±–∫–∏"):
                st.session_state.step = 0
                st.session_state.score = 0
                st.session_state.show_result = False
                st.session_state.finished = False
                st.session_state.mode = "retry_wrong"
                st.session_state.current_df = st.session_state.df_full[
                    st.session_state.df_full["–í–æ–ø—Ä–æ—Å"].isin(wrong_df["–í–æ–ø—Ä–æ—Å"])
                ].reset_index(drop=True)
                st.session_state.answers = []
                st.rerun()

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
        csv = wrong_df.to_csv(index=False).encode("utf-8")
        st.download_button("‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ CSV", data=csv, file_name="–æ—à–∏–±–∫–∏.csv", mime="text/csv")

    # –ò—Å—Ç–æ—Ä–∏—è
    if st.session_state.answers:
        with st.expander("üìã –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–≤–µ—Ç–æ–≤"):
            st.dataframe(pd.DataFrame(st.session_state.answers))
else:
    st.info("üëÜ –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏.")
