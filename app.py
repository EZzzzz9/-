import streamlit as st
import pandas as pd

st.set_page_config(page_title="–¢–µ—Å—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º", layout="centered")
st.title("üìò –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏:")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
uploaded_file = st.file_uploader("–§–∞–π–ª Excel", type=["xlsx"])

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if "step" not in st.session_state:
    st.session_state.step = 0
    st.session_state.score = 0
    st.session_state.answers = []
    st.session_state.quiz_finished = False

# –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
if uploaded_file:
    try:
        df = pd.read_excel(uploaded_file, sheet_name="Sheet1")
        df = df.dropna(subset=["–í–æ–ø—Ä–æ—Å", "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç"])
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        st.stop()

    with st.expander("üîç –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–∞–±–ª–∏—Ü—ã"):
        st.dataframe(df)

    if st.button("üîÅ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"):
        st.session_state.step = 0
        st.session_state.score = 0
        st.session_state.answers = []
        st.session_state.quiz_finished = False

    if st.session_state.step < len(df):
        row = df.iloc[st.session_state.step]
        st.markdown(f"### –í–æ–ø—Ä–æ—Å {st.session_state.step + 1} –∏–∑ {len(df)}")
        st.markdown(f"**{row['–í–æ–ø—Ä–æ—Å']}**")

        options = ['A', 'B', 'C', 'D', 'E', 'F']
        valid_options = [(opt, str(row[opt])) for opt in options if pd.notna(row.get(opt))]
        correct_answer = str(row['–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç']).strip().upper()

        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        answer = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç:", [f"{opt}) {text}" for opt, text in valid_options], key=st.session_state.step)

        if st.button("–û—Ç–≤–µ—Ç–∏—Ç—å"):
            if answer:
                selected = answer[0]
                is_correct = selected == correct_answer
                st.session_state.answers.append({
                    "–í–æ–ø—Ä–æ—Å": row["–í–æ–ø—Ä–æ—Å"],
                    "–í—ã –≤—ã–±—Ä–∞–ª–∏": selected,
                    "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç": correct_answer,
                    "–†–µ–∑—É–ª—å—Ç–∞—Ç": "‚úÖ –í–µ—Ä–Ω–æ" if is_correct else "‚ùå –ù–µ–≤–µ—Ä–Ω–æ"
                })
                if is_correct:
                    st.session_state.score += 1
                st.session_state.step += 1
            else:
                st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –ø–µ—Ä–µ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.")

    # –ö–æ–Ω–µ—Ü —Ç–µ—Å—Ç–∞
    if st.session_state.step >= len(df) and not st.session_state.quiz_finished:
        st.session_state.quiz_finished = True
        st.success(f"üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: {st.session_state.score} –∏–∑ {len(df)}")

    if st.session_state.quiz_finished:
        with st.expander("üìä –ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"):
            st.table(pd.DataFrame(st.session_state.answers))

else:
    st.info("üëÜ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Excel —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏.")
